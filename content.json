{"meta":{"title":"易网盟","subtitle":"专注网站建设优化，做互联网的搬砖人","description":"Hexo/Hugo... + GitHub 免费仓库托管入门教程引导。用最简单的方案，办最实用的事，微软不倒，羊毛到老！","author":"易网盟","url":"https://yiwangmeng.cn/action-hexo","root":"/action-hexo/"},"pages":[{"title":"关于本站","date":"2025-02-26T03:37:56.634Z","updated":"2025-02-26T03:37:56.634Z","comments":true,"path":"about/index.html","permalink":"https://yiwangmeng.cn/action-hexo/about/index.html","excerpt":"","text":"这是个互联网爱好者个人小站，完全出于兴趣爱好自封互联网研究院院长，乐于分享计算机相关使用方法，推广优质实用软件。所有技术类文章除特别说明外均为本站原创，所提供的软件为院长原创或由网络整理而来。 本院始终坚信： 分享是种美德，好人一生平安！ 本着尊重国家法律的精神，根据中华人民共和国国务院令第632号规定： 第十七条 为了学习和研究软件内含的设计思想和原理，通过安装、显示、传输或者存储软件等方式使用软件的，可以不经软件著作权人许可，不向其支付报酬。 本站所有资源均为学习，交流使用，不得用于任何商业用途。使用的软件请下载后24小时内自行删除，若由于研究学习本站提供文件或链接下载的软件而带来损失，本站不负任何责任。 如果您发现本站侵害了您的版权，请联系院长并出示版权证明，院长将第一时间进行相关处理。 如果您也一样热爱互联网，喜欢捣鼓软件，欢迎评论留言或与院长联系。 QQ群：键盘侠 260489333，点此加群"},{"title":"archives","date":"2020-07-18T05:10:34.000Z","updated":"2025-02-26T03:37:56.634Z","comments":true,"path":"archives/index.html","permalink":"https://yiwangmeng.cn/action-hexo/archives/index.html","excerpt":"","text":""},{"title":"分类","date":"2020-08-30T03:41:17.000Z","updated":"2025-02-26T03:37:56.634Z","comments":true,"path":"categories/index.html","permalink":"https://yiwangmeng.cn/action-hexo/categories/index.html","excerpt":"","text":""},{"title":"contact","date":"2020-08-30T14:45:09.000Z","updated":"2025-02-26T03:37:56.634Z","comments":true,"path":"contact/index.html","permalink":"https://yiwangmeng.cn/action-hexo/contact/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2020-08-30T14:40:51.000Z","updated":"2025-02-26T03:37:56.635Z","comments":true,"path":"friends/index.html","permalink":"https://yiwangmeng.cn/action-hexo/friends/index.html","excerpt":"","text":""},{"title":"图库","date":"2023-01-04T03:46:37.000Z","updated":"2025-02-26T03:37:56.635Z","comments":true,"path":"gallery/index.html","permalink":"https://yiwangmeng.cn/action-hexo/gallery/index.html","excerpt":"","text":"[{\"url\":\"https://s1.ax1x.com/2023/01/04/pSFegW6.png\",\"alt\":\"butterfly\",\"title\":\"\"},{\"url\":\"https://s1.ax1x.com/2023/01/04/pSFedQU.jpg\",\"alt\":\"butterfly\",\"title\":\"\"},{\"url\":\"https://s1.ax1x.com/2023/01/04/pSFewyF.jpg\",\"alt\":\"butterfly\",\"title\":\"\"},{\"url\":\"https://s1.ax1x.com/2023/01/04/pSFe0L4.png\",\"alt\":\"fluid\",\"title\":\"\"},{\"url\":\"https://s1.ax1x.com/2023/01/04/pSFeUzT.jpg\",\"alt\":\"Academia\",\"title\":\"\"},{\"url\":\"https://s1.ax1x.com/2023/01/04/pSFeDeJ.png\",\"alt\":\"matery\",\"title\":\"\"},{\"url\":\"https://s1.ax1x.com/2023/01/04/pSFerw9.png\",\"alt\":\"matery\",\"title\":\"\"},{\"url\":\"https://s1.ax1x.com/2023/01/04/pSFesoR.jpg\",\"alt\":\"maupassant\",\"title\":\"\"},{\"url\":\"https://s1.ax1x.com/2023/01/04/pSFe6F1.png\",\"alt\":\"next\",\"title\":\"\"},{\"url\":\"https://s1.ax1x.com/2023/01/04/pSFecJx.jpg\",\"alt\":\"yelee\",\"title\":\"\"},{\"url\":\"https://www.embeddedstack.cn/shot.png\",\"alt\":\"stellar\",\"title\":\"\"},{\"url\":\"https://user-images.githubusercontent.com/16796652/134768469-52d2426b-5c7c-4a46-8f0e-064361044d88.png\",\"alt\":\"nexmoe\",\"title\":\"\"}]"},{"title":"","date":"2016-12-31T10:09:56.000Z","updated":"2016-12-31T10:09:56.000Z","comments":false,"path":"history/index.html","permalink":"https://yiwangmeng.cn/action-hexo/history/index.html","excerpt":"","text":""},{"title":"友链","date":"2022-05-28T03:09:14.000Z","updated":"2025-02-26T03:37:56.635Z","comments":true,"path":"link/index.html","permalink":"https://yiwangmeng.cn/action-hexo/link/index.html","excerpt":"","text":""},{"title":"","date":"2017-02-24T09:37:05.000Z","updated":"2017-02-24T09:37:05.000Z","comments":true,"path":"tags/index.html","permalink":"https://yiwangmeng.cn/action-hexo/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"学术简历样本","slug":"academia-example","date":"2023-02-21T18:02:02.000Z","updated":"2025-02-26T03:37:56.633Z","comments":true,"path":"academia-example.html","permalink":"https://yiwangmeng.cn/action-hexo/academia-example.html","excerpt":"","text":"这是个简历示例页，内容源文件：source/_posts/academia-example.md，可以修改此文件内容为自己想要的，使用 Markdown 或者 HTML 语法都可以。 如果本页排序在站内靠后，该页内容不会在 Academia 主题首页显示，如果遇到不显示的问题，删除其他内容或者将本页排序调整到靠前几页，如：修改本文档 date 值： 1date: 2023-8-22 16:59:16 //一般情况下修改这个时间到最新就会排前面 About me This is a simple page for academic website based on Hexo. It just provides a theme frame and all depends on your markdown posts’ styles. This is the index page which organized with the posts you write in markdown files. News 2020-04-23: ver 1.2.0 publish, support pjax. 2020 February, Join in Test University. A new theme for academic page is published. Publications Einstein, Albert, Boris Podolsky, and Nathan Rosen. “Can quantum-mechanical description of physical reality be considered complete?.” Physical review 47.10 (1935): 777. Einstein, Albert, Boris Podolsky, and Nathan Rosen. “Can quantum-mechanical description of physical reality be considered complete?.” Physical review 47.10 (1935): 777. Add more informations in your posts… Introduction This is a light &amp; simple &amp; responsive theme for academic websites on Hexo, crafted from academicpages on Jekyll. Thanks a lot. The theme adopts only post and page in Hexo to show your informations. For an academic page, it’s important to be simple and obvious. Example page: phosphorw.github.io Installation The simplest way to install is to clone the entire repository: 1git clone https://github.com/PhosphorW/hexo-theme-academia.git themes/Academia Some required renderers: 1npm install hexo-renderer-pug hexo-renderer-stylus --save Set theme in hexo work folder’s _config.yml 1theme: Academia Create your academic page Only post and page are supported in this theme. 1hexo n post &quot;any title&quot; or 1hexo n page &quot;any title&quot; Important: Add academia: true in front_matter filed in post .md. Only post with academia: true front_matter will be shown on home (index) page. You can write your informations in either one post or some posts with this method. The front_matter doesn’t works in page. The pages are standalone with its markdown content. Theme Configurtion All of below options can be config in site folder _config.Academia.yml Top Menu: in-page anchor, new page links or any links you like Side Bar: Support avatar, social links, extra social links (optional), CV_download_link Box-shadow mode (optional) All icons in page is supported with font-awesome-5 (font-awesome-4) fontawesome-4 is not used since v1.2.1. If you want to update manually, first change CDN stylesheet to fa5. Then change your previous icon class fa to fas or fas. If you need rss feed, use hexo plugin: hexo-generator-feed Document 中文文档：Hexo-Theme-Academia 说明文档","categories":[],"tags":[{"name":"Example","slug":"Example","permalink":"https://yiwangmeng.cn/action-hexo/tags/Example/"}]},{"title":"从零开始建个小站 - 常见问题","slug":"guide-how-to-build-site-9","date":"2022-11-11T03:11:11.000Z","updated":"2025-02-26T03:37:56.634Z","comments":true,"path":"guide-how-to-build-site-9.html","permalink":"https://yiwangmeng.cn/action-hexo/guide-how-to-build-site-9.html","excerpt":"","text":"话说在前 我不会/看不懂/不想看/太麻烦/不要发教程…… 懒那就没辙了，快发动你的钞能力！ 按次付费，花了钱也不可能一直伺候你，有些人想付费站长也不乐意接，毕竟彼此选择才能幸福！ 问就发教程，就不能直接给我远程解决吗？ 请看上一条！ 有教程都不舍得看一眼，这么珍惜自己的时间精力就该想到别人也一样。劳动是按次付出的，之前的需求已完成那么站长就履约结束，请问这次是付费了吗？ 你丢出问题，站长提供解决思路，不是什么态度不好的问题，站长的时间精力有限，废话多说无益！耐心一点，也许迎刃而解；友好一点，指不定站长闲得慌还能友情远程搭把手。 上帝？滚！！！站长的世界里人人平等！ 主题相关 怎么更换/安装/配置主题？ 请打开网站配置文件 _config.yml 仔细看下，有更换主题的配置注释。至于主题安装及功能配置，每个主题大同小异，但言而总之，请找到主题的说明文档，根据主题文档去操作，方法详见：从零开始建个小站 - 5. 个性化设置 为什么换了个主题就报错了？ 主题不一样，有可能要求的依赖不一样，或者支持的功能不一样，如：有的主题支持 &#123;% xxx %&#125; 标签功能，有的不支持，如果你的内容中用了这些标签，当切换到一个不支持的主题时就会渲染失败报错，所以：请阅读主题文档，根据主题要求去使用！ 示例站内容中就使用了标签语法，如果切换到其他主题报错请删除以下包含了标签语法的示例目录： 图库页面：source/gallery 引导教程：source/_posts/guide 去哪找自己喜欢的主题？ 本站提供的仓库方案中，自带 数套精选特色主题，只需要更改网站配置中的主题配置项启用即可。 每个人的审美和需求都不一样，如果自带的这几套主题都看不上眼，请自行到 Hexo官方主题展示页 去挑选，萝卜白菜都是你自己的喜好。 怎么更新主题？ 主题安装方式包括：本地 themes 文件夹、git submodule和 npm 包管理，各种安装方式对应大同小异： 本地 themes 文件夹：文件都存储在本地主题文件夹下，更新主题文件夹内内容即可 git submodule：使用 git 同步子模块最新代码即可。该子模块主题需要有管理权限，有管理权限则更新对应版本代码后提交到 git 仓库，否则本地不要做任何更改 npm 包管理：在网站根目录下执行 npm install hexo-theme-主题名命令即可安装最新版，如果要指定版本，请编辑网站根目录下的 package.json 指定版本号，如：“hexo-theme-butterfly”: &quot;5.3.3&quot;，npm 版本号更多知识可以搜索关键词：package.json 版本号规则 主题代码更新后，可能还会涉及配置更新，所以请将主题目录下的 _config.yml 配置与网站根目录下的 _config.主题名.yml 进行相应同步，内容比对工具推荐 vscode 或 BCompare 好奇宝宝好动手 关于页面怎么来的？ 页面都是需要根据自己需求创建的，，有些主题文档中也会提及，或者请参考：关于菜单怎么来 其他 标签，分类，友链等页面以此类推，更多需要参考主题实现文档 怎么我改了没效果？ 任何增删改都需要提交同步到上端仓库，请确保你所做的更改已经提交同步完成，然后等几分钟服务器刷新缓存，对照内容维护可参考：从零开始建个小站 - 4. 练手内容维护 中相关内容。 很多小白以为点了 commit 就万事大吉了，请仔细看下上面的教程，点完 commit 只是提交到了本地版本库，push 或者 sync 完成前别处并不知道有这回事。 而且，点 commit 前请务必填写 message ，告知后来人改了什么，为什么会有这次变更，这是 Git 版本管理基本规范。 改了几行代码，就异常了 改了啥自己清楚，Git 历史记录中也能对比前后差异，所以改完建议本地预览一下结果，启动 hexo server 预览的时候就会显示日志，循着异常日志去看下具体什么问题，然后对应修正即可。 或者把错误提示关键词丢给本站战略合作伙伴 Google、百度及各种 AI 工具，让我们的战略伙伴助你一臂之力。 删了些东西后外网 403，本地预览提示 can't get / 一些 page 文件夹可以随意删，最多提示 404，但 source/_posts 目录下 必须存在一篇以上文章，否则视为空站无内容，无内容就不会生成 index.html，此时推送到外网就会不存在网站首页，访问时 nginx 就会抛 403 错误。 所以：推送发布前你预览了吗？预览不正常还推送发布？ 外网访问提示 not found 404 请确认访问的地址是正确的，是不是线上渲染工作还没完成 本地请先预览，如果本地不正常，先解决本地的问题，参考前文 403 问题 请检查线上对外展示仓库指定的 page 分支是否正确，刚推送的仓库请稍等片刻，清理本地浏览器缓存，静态上端刷新缓存完成 一些被党和人民特别关照的内容，请上梯子访问 网站预览显示空白什么都没有 应该是找不到主题文件，在预览命令下应该会输出 WARN No layout: index.html。 更换主题时请注意预览时本地需要完整下载主题文件，且网站配置 _config.yml 中配置正确的主题文件夹名称，如主题文件夹保存为 hexo-theme-butterfly，那么就需要配置为：theme: hexo-theme-butterfly，所以为方便配置及缩短配置文件命名一般只以最短主题名文件夹存储。 这个样式我不喜欢，怎么改？ 请去翻下 主题配置 和 主题文档 ，如果没看到相关设置或者满足不了你的需求，能问这问题的同学还是建议别折腾魔改主题了，去换个主题更实际点，更换主题方法请参考前文 怎么更换/安装/配置主题。 如果有能力折腾修改主题的同学，恰好修改的主题是示例站自带，那么请注意 submodule 的问题。 示例站自带主题在项目中只提交了源仓库版本链接，你本地修改了也不能提交到自己的仓库，请将要修改的主题从 submodule 中删除后再完整提交到自己的源码仓库中，删除 submodule 可参考：从零开始建个小站 - 其他知识 中 添加/删除 submodule 相关内容。 VSCODE 里 Git 提交点 commit 后一直转圈圈？ 正如 从零开始建个小站 - 3. 搞个编辑器 中 界面化Git操作 章节明确提示的内容： 点 commit 前请务必填写 message ，告知后来人改了什么，为什么会有这次变更，这是 Git 版本管理基本规范。 一直转圈圈请退出 Git 或者 VSCODE 后重新提交，记得 提交前填写变更信息、提交前填写变更信息、提交前填写变更信息！ 天天向上 MarkDown语法我不会😢 MarkDown语法已经很简单易懂了，这里有一个章节列了几个常用到的基本语法： 从零开始建个小站 - 其他知识 ，更多可以阅读后文更专业的MarkDown语法教程。 对照教程敲一两遍就会了，用啥查啥临时抱佛脚都能应付得了。实在不会可以借助编辑器界面化操作，或者你就当Word或记事本写内容都行，无非就是少了点格式样式。 在 从零开始建个小站 - 3. 搞个编辑器 章节中推荐的 VSCODE，可以对 MarkDown 源码实时预览实现所见即所得编辑，装上 MarkDown 扩展后更是事半功倍，请自行摸索学习。 我添加的图片怎么不显示？ 请自行按 MarkDown 或者 HTML 语法添加图片，也可以打开本站自带的示例源码依葫芦画瓢，语法具体可见：从零开始建个小站 - 其他知识 中 MarkDown 语法 及后续贴出的相关教程。 如果是网络封锁严重的地区，建议将图片传图床后从图床引用，防止 jsdelivr、Github 等被屏蔽导致图片加载失败 文章 URL 不符合预期 URL 组织形式可以按配置指定，详细可参考 Hexo 官方文档 permalinks 说明。 当想按目录路径组织文章时，默认文章 URL 形式为：https://yiwangmeng.cn/action-hexo/guide/how-to-build-site-0.html，某些设置可能影响 URL 中路径表现形式，如 Hexo 配置： 1234# Writingnew_post_name: :title.md # 新建文章文件命名格式# 配置`:title.md`格式URL路径支持目录：`/dir/title`# 配置`:year-:month-:title.md`时URL将变成：`/dir-title` 已发现问题中，新建文章的文件名命名配置会影响 URL 路径形式，当配置 :year-:month-:title.md 时 URL 将变成：https://yiwangmeng.cn/action-hexo/guide-how-to-build-site-0.html，/guide/ 目录路径被同化成了文件名的前缀。 后顾之忧 换电脑怎么办？ 本站提供的仓库方案，只要你仓库不删就不会丢，新电脑上照本站使用教程克隆源码仓库安装一遍本地预览环境和 SSH 密钥就可以了，如果你遵循 Git 提交规则，不管到哪有多少个设备都可以一起用，也可以随时恢复到任意一次提交的版本。 要修改网址怎么办？ 网站网址在 Hexo 配置文件 _config.yml 中修改如下配置项： 123# 网址, 必须以 http[s]:// 开头# 没有自己的域名就用免费 username.github.iourl: https://yiwangmeng.cn 如果用自己的域名，请修改配置的同时，在域名解析托管商处做好 CNAME 解析，一般都是添加这样的两条记录： 记录/名称/Name：@ 和 www 方式/类型/Type：CNAME 记录值/解析目标/Target：username.github.io username 是你 GitHub 用户名，所以当你想更改 GitHub 提供的免费二级域名时，需要： 先更改自己的用户名 其次同步修改这个 username.github.io 的 Pages 仓库名 然后配置中或者 DNS 解析记录也要相应的同步修改 有没有后台？能不能在线维护？ 有做后台的方案，也有将 GitHub 仓库再拖到第三方平台去部署的方案，但都不推荐。本来 hexo 或 hugo 就只是个渲染框架，用的时候拎出来跑一圈，跑完就没啥事放生掉，有些人却要强迫这俩货长期站街营业，或者再转一次第三方，如果不是特殊需求，都属于舍本逐末瞎折腾。 如果想在线维护内容，本站仓库方案也可以直接在 GitHub 仓库 code 界面增删改文件，然后网页上就地提交变更就完事，和克隆到本地使用区别就是线上只能单个文件增删改然后提交，小改临时用用倒没什么问题，变更得多还是建议克隆到本地电脑维护。 能部署到自己的云服务器上吗？ 能，方案大致有： 仍然延用本站仓库方案，部署好相关权限，在 GitHub Action 中添加发布到自己的服务器步骤 丢弃本站仓库方案，按官方文档修改发布配置，然后用 hexo g &amp;&amp; hexo d 命令发布到自己的服务器 在服务器上部署 hexo 环境，把 MarkDown 源码推送到自己的服务器，触发 hexo g 发布 html 强烈不推荐在服务器上运行 hexo server 提供长期营业的残暴行为，这种做法极其愚蠢 具体怎么做请自行求助本站战略合作伙伴。 善人无疾 GitHub咋打不开？ GitHub默认是不用爬墙的，但各地网络管制松紧度不一样，无法访问就上梯子吧。Windows 系统强烈推荐用 winXray 这个代理软件，简单好用，简直是为 GitHub 而生。 Git 客户端仓库同步可以先尝试免梯子方法：配置好 SSH 密钥后使用 SSH 协议，方法可参考：从零开始建个小站 - 2. 拉取仓库到本地 中 生成 SSH 密钥对 章节内容 Git 客户端启用梯子配置方法请见：从零开始建个小站 - 其他知识 中相关内容 Git 推送同步失败 这问题比较复杂，网络或者权限问题居多，具体还需要看 Git 输出日志，提取关键信息求助战略合作伙伴基本上能解决。 常见处理方式： 多试几次，或者挂梯子后再试，见前文 有一些系统无法自动保存 ~/.ssh/known_hosts ，致使每次同步都要确认，而该确认提示在界面上看不到，可以切换到终端模式，按提示输入 yes，具体怎么做请自行求助本站战略合作伙伴。 检查密钥对，确保已经部署妥当 GitHub 页面上怎么创建文件夹 GitHub 仓库页面上默认是不能创建文件夹的，只能创建一个文件，然后文件路径中添加一层文件夹，如创建一个 README.md，在文件名输入相应内容： 123README.md #直接在当前路径下创建README.md文件test/README.md #先创建test目录，在test目录创建README.md文件test/test2/README.md #同时创建了test和test2两级目录,test2目录创建README.md文件 建议 README.md 里写点有意义的内容，如这个文件夹的用途说明介绍。 如前文能不能在线维护中提及，单个文件偶尔在页面上维护没什么问题，多文件建议将代码克隆到本地操作，","categories":[{"name":"做网站","slug":"做网站","permalink":"https://yiwangmeng.cn/action-hexo/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://yiwangmeng.cn/action-hexo/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"从零开始建个小站 - 1. 搭个本地预览环境","slug":"guide-how-to-build-site-3","date":"2022-06-06T12:20:20.000Z","updated":"2025-02-26T03:37:56.633Z","comments":true,"path":"guide-how-to-build-site-3.html","permalink":"https://yiwangmeng.cn/action-hexo/guide-how-to-build-site-3.html","excerpt":"如果你选择的是自备服务器的付费动态网站方案，那么直接在服务器上安装环境部署网站程序即可，本文不做演示，下文只针对免费静态站方案进行详细说明。 其实官方默认自带的 hello world 示例就告知了基本的用法，要把细枝末节展开来还能再写一本书，本教程也只是针对本站部署的方案，给新手演示一个大概的操作流程，更多细节或者高深玩法请在熟悉后自行发掘。","text":"如果你选择的是自备服务器的付费动态网站方案，那么直接在服务器上安装环境部署网站程序即可，本文不做演示，下文只针对免费静态站方案进行详细说明。 其实官方默认自带的 hello world 示例就告知了基本的用法，要把细枝末节展开来还能再写一本书，本教程也只是针对本站部署的方案，给新手演示一个大概的操作流程，更多细节或者高深玩法请在熟悉后自行发掘。 虽然也能在线增删改文件，但还是建议拉取仓库到本地电脑进行操作。在本地电脑操作，就有必要搭个本地预览环境。 以下以 Windows 系统环境演示，其他操作系统请打开系统终端 terminal 直接输对应的命令 到以下涉及软件官网下载如果速度慢，可以从 墙内淘宝源下载。 1.1 安装 Git 客户端 仓库文件管理借助大名鼎鼎的代码项目管理工具，到 Git-SCM官网 或者 墙内淘宝源 下载安装包或者软件源默认安装完成即可。 Windows 系统安装完成后，会在右键菜单添加 Git Bash Here 入口，方便后续使用。 如果以前未使用过 Git，一般都需要设置用户名和邮箱，随便一个目录空白地方 点右键》 Git Bash Here ，运行以下命令设置： 12git config --global user.name name #设置Git用户名git config --global user.email &quot;email&quot; #设置Git邮箱 这里只是最基本的Git信息设置，后续提交同步 GitHub 等需要额外授权，详见站内后文：从零开始建个小站 - 2. 拉取仓库到本地 Git Bash Here 这个右键菜单，在哪个目录下点就会将工作路径自动切换到哪，可以省去切换工作路径的麻烦，小白可以多用用。 1.2 安装 nodejs nodejs 是跨平台的 JavaScript 运行环境和包管理工具。同样的，到 Nodejs官网 或者 墙内淘宝源 下载安装包，建议选择长期维护版，默认安装完成即可。 安装完成后，在前文安装完成的 Git Bash 或者系统终端中输入命令 npm version 验证安装结果： 123456$ npm version&#123; npm: &#x27;8.5.5&#x27;, node: &#x27;16.15.0&#x27;, ……&#125; 为了后面安装依赖包顺利完成，运行以下命令设置 npm 墙内源： 123# 设置 npm 墙内源，加快网络下载速度，墙外就不要做了npm config set registry https://registry.npmmirror.com # 最新淘宝源npm config set registry http://mirrors.cloud.tencent.com/npm/ # 腾讯源 1.3 安装 hexo 前文安装完成 npm 包管理器后，就可以安装 hexo 预览客户端了，打开前文安装完成的 Git Bash 或者系统终端，输入以下命令： 123# 系统全局安装hexo，方便从零开始# macOS 或 Linux 非 root 用户登录需要 sudo 权限运行npm install -g hexo-cli 安装完成后可使用命令 hexo version 验证： 12345$ hexo versionINFO Validating confighexo: 6.2.0hexo-cli: 4.3.0…… macOS新版本默认启用的是 zsh 终端，hexo 安装完成后并未添加到 zsh 能识别的系统变量，会出现提示 zsh: command not found: hexo 的情况，可添加系统变量解决，具体方法请求助战略合作伙伴 Google和百度，或者就此烂过。 也可以 将系统默认终端改成 bash，或者使用后文提到的 VSCODE 集成终端，将 VSCODE 调用默认终端改成 bash，然后在 VSCODE 集成终端运行命令即可。 至此，网站预览所需要的系统环境就准备完成。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://yiwangmeng.cn/action-hexo/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://yiwangmeng.cn/action-hexo/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"从零开始建个小站 - 2. 拉取仓库到本地","slug":"guide-how-to-build-site-4","date":"2022-05-24T12:20:20.000Z","updated":"2025-02-26T03:37:56.633Z","comments":true,"path":"guide-how-to-build-site-4.html","permalink":"https://yiwangmeng.cn/action-hexo/guide-how-to-build-site-4.html","excerpt":"前面的准备工作已完成，剩下就是将仓库文件克隆同步到本地电脑，方便后续维护与预览。","text":"前面的准备工作已完成，剩下就是将仓库文件克隆同步到本地电脑，方便后续维护与预览。 2.1 git clone 本站方案 只需要维护私有源码仓库，所以只需要将 私有源码仓库 克隆到本地使用即可，网页会自动发布到对外展示服务仓库对应分支，用户名和对外展示仓库不删不改就行。 如果改了 GItHub 用户名，请参考 从零开始建个小站 - 常见问题 中 要修改网址怎么办 中提及项做相应修改。 还是在 Git Bash 中，输入这样的命令： 12cd d:\\GitHub #先切换到存放本地文件的路径git clone --recurse-submodules 源码仓库地址 #带子模块一起克隆到本地 如果第一次克隆时未带 --recurse-submodules 参数或者没有完整完成，可以 在源码仓库根目录路径下 运行以下命令继续完成子模块更新： 12#请在仓库根目录路径下运行以下命令git submodule init &amp;&amp; git submodule update 以上命令中请将 源码仓库地址 换成自己的源码仓库实际地址，建议从仓库页面上复制。 仓库地址获取方法：打开源码仓库主页》在文件列表右上方有个 Code ，点击下拉复制，如下图所示可选择 HTTPS「首选」 或 SSH： HTTPSSSH第一次使用 GitHub 账号需要授权，默认会有如下图授权提示弹窗，选择从浏览器登录授权，打开浏览器后按提示输入账号密码登录后点击授权，直到出现授权成功的提示就表示授权成功。 如果由于网络原因，HTTPS 协议无法拉取/推送仓库，可尝试使用 SSH 协议 已拉取的仓库修改协议：用文本编辑器打开仓库目录下的 .git/config 修改对应 url = 复制的仓库地址 ，别修改错了！ 如果涉及到管理有修改权限的 submodules，也请在 .gitmodules 中将子模块项目一并修改为 SSH 地址 如果要使用 SSH 协议链接，需要先配置 SSH 连接密钥。当前 GitHub 强制用户使用超长随机串密码，需要遵循规则使用 SHA-2 签名规则密钥。 注意： 2021年8月14号开始，GitHub弃用账密验证Git操作，改用token或SSH密钥 GitHub 在 2022 年 3 月 15 日通过删除较旧的不安全密钥类型提高了安全性，不再支持 DSA 密钥 (ssh-dss)。 在 2021 年 11 月 2 日之前 valid_after 的 RSA 密钥 (ssh-rsa) 可以继续使用任何签名算法。 在该日期之后生成的 RSA 密钥必须使用 SHA-2 签名算法。 某些较旧的客户端可能需要升级才能使用 SHA-2 签名。 生成 SSH 密钥对 打开 Git Bash Here 或者系统终端，通过以下命令生成私钥和公钥： 123# 生成密钥对，一路回车默认即可# 如已有其他密钥对在用，自己改下生成的文件名以防覆盖ssh-keygen -t ed25519 -C &quot;Your_Email&quot; 如果您使用的是不支持 ed25519 算法的旧系统，请使用： 1ssh-keygen -t rsa -b 4096 -C &quot;Your_Email&quot; 更多密钥相关详细信息可参阅 GitHub官方文档 如果你是一路回车生成密钥对，那么生成的密钥对会保存在：~/.ssh/ 目录下，~ 表示用户目录，如操作系统登录用户名是 xyz ，那么在 Windows 下路径一般为 C:\\Users\\xyz\\.ssh ，macOS/Linux下路径为 /home/xyz/.ssh ，其中： 12~/.ssh/id_ed25519 //私钥，保存在本地~/.ssh/id_ed25519.pub //公钥，配置到远端 至此，本地 Git 认证环境已准备妥当，下一步将公钥配置到 GitHub 中就能使用了。 配置到 GitHub 为了使用方便，直接给 GitHub 添加一个用户密钥，一个密钥可作用于整个账号的增删改查操作。 将 SSH 公钥内容复制到剪贴板「假设都按前面的默认操作」 Windows 打开 Git Bash Here ，复制粘贴如下命令 12clip &lt; ~/.ssh/id_ed25519.pub//该命令自动将公钥存到剪贴板，直接用文本编辑器打开公钥再复制也是一样的 macOS/Linux 打开 Terminal（终端），复制粘贴如下命令： 12cat ~/.ssh/id_ed25519.pub// 执行完将打印出来的公钥内容完整复制待用 登录GitHub账号后，在任何页面的右上角，单击右上角个人资料照片，然后单击弹出下拉中的 Settings（设置） 选择左侧 Access》 点击 SSH and GPG keys，点击 New SSH key（新 SSH 密钥） 在 Title（标题）字段中，为新密钥添加描述性标签便于识别用途。 例如，如果您使用在个人Mac上，此密钥名称可能是 Personal MacBook。 将前面复制的公钥串粘贴到 Key（密钥）字段 最后点击 Add SSH key（添加 SSH 密钥） 完成添加 2.2 安装依赖包 仓库中只包含网站必须的内容源码文件，一些依赖包文件是忽略提交的，所以本地需要重新安装，在仓库 根目录路径下 运行以下命令： 1npm install 以上命令实际上是下载 package.json 中定义好的依赖包，等依赖包下载完成，整个本地预览环境就全部安装完成了。 2.3 预览测试 在仓库 根目录路径下 运行 hexo server 即可启动预览服务： 12345user@IAY MINGW64 /d/Git/action-hexo (main)$ hexo sINFO Validating configINFO Start processingINFO Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop. 以上输出信息中，/d/Git/action-hexo (main) 就是所谓 运行路径 ，Windows系统表示 d:\\Git\\action-hexo 目录，当前在 main 分支。 浏览器中打开 http://localhost:4000 就可以预览，按 Ctrl+C 组合键停止预览服务，一些主题或者网站设置变更需要重启该预览服务才能看到效果。 2.4 用得到的命令 hexo server ：开启本地预览服务，默认端口 4000，可以添加 -p port 指定预览端口，Ctrl + C 关闭，一些网站更改需要重启预览才能看到效果 hexo new &quot;postName&quot; ：新建文章，postName 不建议是中文，也不要添加特殊符号，生成MarkDown 文件在 source/_post 目录下，hexo new 默认新生成的就是 post 类型 hexo new page &quot;pageName&quot; ：新建页面，会在 source 目录下生成 pageName 文件夹及对应 index.md 上面用到的命令对应缩写： 12hexo s == hexo serverhexo n == hexo new 更多命令可自行学习 12hexo help # 查看帮助hexo version #查看Hexo的版本","categories":[{"name":"做网站","slug":"做网站","permalink":"https://yiwangmeng.cn/action-hexo/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://yiwangmeng.cn/action-hexo/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"从零开始建个小站 - 3. 搞个编辑器","slug":"guide-how-to-build-site-5","date":"2022-05-23T12:20:20.000Z","updated":"2025-02-26T03:37:56.633Z","comments":true,"path":"guide-how-to-build-site-5.html","permalink":"https://yiwangmeng.cn/action-hexo/guide-how-to-build-site-5.html","excerpt":"工欲善其事必先利其器，一个好用的编辑器可以事半功倍。","text":"工欲善其事必先利其器，一个好用的编辑器可以事半功倍。 3.1 下载安装编辑器 VSCODE 就是个不错的选择，自行到 微软官方网站 去下载安装。 VSCODE 是当前最流行的编辑器，免费开源，专业和业余都能胜任： 全目录管理，一个界面可以管理整个目录下的文件 语法格式显示，也能实时预览 与 Git 集成，可以界面化操作 Git 提交同步，比较等 集成命令终端，预览调试方便 VSCODE 可以在当前界面直接调出命令行终端，方便输入命令使用： 启动 VSCODE ，Windows 版可以通过快捷 CTRL+~ 或者菜单 Terminal》New Terminal（新建终端） 该终端默认使用系统终端，功能上有些许差异，建议设置默认终端为 Git Bash，方法：点击终端窗口右上角 ➕ 右侧的 下拉箭头 如果 VSCODE 调出的终端无法运行 npm 或者 hexo 命令，那么请直接使用 Git Bash Here 终端即可，或者自己去添加对应系统变量解决。 其他如 Atom、Sublime Text、Typroa 之类的编辑器也都可以，甚至是专业的代码编辑器请自行研究。 3.2 文件一站式管理 VSCODE 可以很方便地对网站进行管理： 克隆完成后，通过快捷方式 Ctrl+K Ctrl+O 或者菜单 File（文件）》Open Folder（打开文件夹） 打开刚克隆完的仓库目录。 至此，我们就可以在 vscode 中便捷地增删改网站源文件了。 文件修改后，请记得要保存，记得要保存，记得要保存，保存文件的快捷键：Ctrl+S 3.3 界面化 Git 操作简单演示 VSCODE 很好地集成了Git操作，在我们增删改文件后，可以直接在编辑器界面与 Git 仓库提交同步： 点 commit 前请务必填写 message ，告知后来人改了什么，为什么会有这次变更，这是 Git 版本管理基本规范 提交只是本地操作，要同步到外网，还需要进一步 推送或同步 ，界面上有好几处 同步 、push 等功能按钮，或者直接点 VSCODE 窗口左下角状态栏上 🔄 即可完成Git数据同步。 上图中 🔄 0↓ 1↑ 表示有 0 个变更待拉取/下载，有 1 个变更待推送/上传 如果想一次性完成提交和推送，可以在填写完变更信息后，点击提交右侧的下拉按钮选择提交并推送。 VSCODE 界面上其他按钮功能可以将鼠标移动到对应图形上方悬停一下，然后就会有功能提示了，请自行查阅并使用。基本的演示如动图： 直接填写变更说明提交表示把所有变更提交，如果只想提交指定某个文件，那么如上图所示，点击变更文件后面的 ＋ 单独暂存变更并提交，其他未暂存变更的文件不会被提交。 第一次使用时会提示是否直接提交等提示，请正确选择是、总是、允许……等。 推送到仓库需要授权，如果是 SSH 协议仓库地址，还需要先正确配置 SSH 密钥，方法请见 从零开始建个小站 - 2. 拉取仓库到本地 中相关章节。 更多操作建议去学习下 Git 基础知识，可求助我们的战略合作伙伴 Google 和百度。 虽然项目仓库主页直接增删改文件都可以，但网页上只能一个一个文件操作，建议还是同步到本地使用，借助编辑器事半功倍，也相当于多了个源码本地备份。 如果不是使用本站的仓库自动渲染方案，项目可能不是 Git 管理方式，在 vscode 中将显示不是 Git 仓库 3.4 推荐插件 作为 MarkDown 编辑器和文件管理器，建议安装以下插件： Git History/Git Graph：界面化查看及管理 Git 提交记录 Markdown All in One：MarkDown 预览及一些快捷方式 Markdown Preview Mermaid Support：MarkDown 流程图、时序图等渲染支持 Markdown Table：快速插入 MarkDown 表格或者转换成表格代码 Markdown Shortcuts：MarkDown 各种语法快捷方式 其他有用的插件请自行探索。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://yiwangmeng.cn/action-hexo/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://yiwangmeng.cn/action-hexo/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"从零开始建个小站 - 4. 练手内容维护","slug":"guide-how-to-build-site-6","date":"2022-05-22T12:20:20.000Z","updated":"2025-02-26T03:37:56.633Z","comments":true,"path":"guide-how-to-build-site-6.html","permalink":"https://yiwangmeng.cn/action-hexo/guide-how-to-build-site-6.html","excerpt":"","text":"本实操仅针对 建站方案选择 中提及的免费静态站方案：hugo/hexo + GitHub + GitHub免费二级域名/自备域名 ，另外的付费动态站方案自带网站后台，界面化的一体操作没什么好演示的，如有需要可求助我们的战略合作伙伴Google和百度。 针对 GitHub 仓库版方案，我们 只需要对私有源码仓库 做两件事：增/删/改 --&gt; Git提交同步 增：新增文章、页面、图片等 删：删除文章、页面、图片等 改：对已有的文章、页面、配置等进行修改 除非你会，否则不要动主题目录下任何东西，主题功能只需要按主题文档修改 _config.主题名.yml 中配置即可。 除非你会，否则不要动主题目录下任何东西，主题功能只需要按主题文档修改 _config.主题名.yml 中配置即可。 除非你会，否则不要动主题目录下任何东西，主题功能只需要按主题文档修改 _config.主题名.yml 中配置即可。 使用本站提供的项目仓库自动方案，提交源代码后，会自动触发渲染发布，然后需静待上端网络缓存更新后才看到最新结果。 强调三点： 所有的增删改都需要同步到上端仓库后网络上才能看到变更！！！ 所有的增删改都需要同步到上端仓库后网络上才能看到变更！！！ 所有的增删改都需要同步到上端仓库后网络上才能看到变更！！！ 4.1 新建文章 新建文章或页面可以通过新建命令或者复制已有范本后再修改，任意方式都可以，只要最终生成符合规则的MarkDown文档即可。 方式一：hexo n 文件名 命令方式新建文章或页面，那必定需要在命令终端内执行，hexo n 是 hexo new post 的简写命令。 打开命令行终端，输入：hexo n post-name ，如：hexo n just-a-test ，就会在 source/_post 目录下生成一个名称为 just-a-test.md 的文件，这就是新文章的 MarkDown 源码了。 生成的新文章MarkDown源码文件名称不建议含有特殊符号、汉字 打开源码文件就能看到自动生成了文章标题等基本的 Front-matter 信息，文章标题等按自己的实际内容编写修改。 方式二：复制已有再修改 复制已有 就是字面意思，不用打开命令行终端输命令，直接到 source/_post 目录下找个已存在的 MarkDown 文件，如：把网站自带的 hello-world.md 这个文件复制一份改名为 new-post.md ，然后打开该源码文件，把标题，日期等信息按实际内容需求改好，填充新内容就成了。 4.2 格式！格式！ 前文新建文章或页面说明都提到了需要遵循格式。 一个MarkDown 源码文件，除了 Front-matter 头部信息，其他的就是基本的 MarkDown 语法，MarkDown 语法是页面内容展示，错误与否都只是关系到展示内容样式，而 Front-matter 则直接关系到 hexo 能不能把 MarkDown 源码文件正确渲染成 HTML ，所以遵循正确的 Front-matter 至关重要。 不管是Hugo还是Hexo，他们都只是一种渲染框架，所以MarkDown源代码都需要特定的 Front-matter 标记，也就是两行 --- 中间的那段。 12345678910111213141516---title: &#x27;网页模板 pug 基本语法&#x27;categories: 学编程tags: - 博客建站date: 2021-12-10 15:22:57updated: 2021-12-10 15:22:51toc: truecomments: truekeywords: &#x27;&#x27;description: &#x27;pug原名jade，因版权问题更名为pug，即哈巴狗。如果 `Front-matter` 内容有跨行或特殊符号等，请用英文引号包起来，就如本段示例。&#x27;top:---这里开始就是正文内容了…… 以上示例是 Hexo 程序的 Front-matter 头部信息，其中一些设置项也需要对应的主题支持，如果不是 Hexo 基础 Front-matter ，具体需要添加什么根据主题文档来。 注意：每一个参数的 : 或者 - 后，都需要至少留一个空格，如果不填值就无所谓，或者将参数行删除都行，就是不能不留空格直接写，否则会报错，格式有错误时 VSCODE 也会显色提示，请留意。 Front-matter 基础配置项可见： Hugo-Front-Matter Hexo-Front-matter 在完成了 Front-matter 信息设定后，我们就可以在第二个 --- 行下方填充自己想要的内容。内容书写格式默认使用 MarkDown 语法，你直接写 HTML 代码也行，甚至你可以不顾语法当记事本或者Word写是没问题的，无非就是少了些格式样式。 MarkDown 语法边用边学都没问题，本来就没几个语法，可参考 从零开始建个小站 - 其他知识 中 MarkDown语法 章节 4.3 提交同步数据 对于增删改后的内容，我们可以启动本地预览查看效果，没问题了再通过 Git 提交并推送到上端仓库，静待上端渲染及刷新完缓存就能看到最终结果了。 本地预览方法请参见 从零开始建个小站 - 2. 拉取仓库到本地 中 预览测试 章节内容 Git 提交同步数据可用命令行，也可以使用 VSCODE 集成的界面化操作，详情请参考：从零开始建个小站 - 3. 搞个编辑器 4.4 使用快速模板 在熟悉了 Hexo 的基础用法后，有些内容是制式固定的，或者想偷个懒一次性都添加好默认内容，那么我们就可以借助自定义快速模板来完成。 在使用 hexo n 命令新建文章时，其实是遵循模板规则。打开 scaffolds 目录，可见有文章，页面等模板文件，打开源码可见如下内容 12345---title: &#123;&#123; title &#125;&#125; //自动替换标题date: &#123;&#123; date &#125;&#125; //创建时间tags: //没内容就留空，但该 tags: 项会创建--- 比如在 post.md 添加新内容如下： 12345678---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags: - Linux - Windowstop:--- 那么，在 hexo n post just-a-test 命令执行后，生成的新文章默认就会带上新加内容，其他用法以此类推。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://yiwangmeng.cn/action-hexo/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://yiwangmeng.cn/action-hexo/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"从零开始建个小站 - 5. 个性化设置","slug":"guide-how-to-build-site-7","date":"2022-05-21T12:20:20.000Z","updated":"2025-02-26T03:37:56.633Z","comments":true,"path":"guide-how-to-build-site-7.html","permalink":"https://yiwangmeng.cn/action-hexo/guide-how-to-build-site-7.html","excerpt":"项目仓库克隆下来，网站的各项设置都是默认的，一些标题，作者之类的需要根据自己的实际情况进行修改，个性设置主要是网站根目录的网站基础配置和主题配置。 好在 hugo 和 hexo 配置结构大同小异，而且都支持将配置文件放在网站根目录下，只需要修改配置，今后主题更新只需要同步配置其他也互不影响。","text":"项目仓库克隆下来，网站的各项设置都是默认的，一些标题，作者之类的需要根据自己的实际情况进行修改，个性设置主要是网站根目录的网站基础配置和主题配置。 好在 hugo 和 hexo 配置结构大同小异，而且都支持将配置文件放在网站根目录下，只需要修改配置，今后主题更新只需要同步配置其他也互不影响。 5.1 认识文件 123456789101112131415161718192021222324action-hexo #hexo程序工作目录| README.md #说明文档| .gitignore #指定Git提交时忽略的文件规则| package.json #依赖包记录，不要动| _config.yml #网站基础配置文件，定义网站标题，作者等| _config.fluid.yml #fluid这个主题的配置文件，来源于且优先级高于主题目录下的_config.yml|+---node_modules #hexo的依赖环境，不要动，一般都会添加到.gitignore忽略+---scaffolds #文章/页面/草稿模板，不会就不要动|+---source #网站内容根目录，网络路径为：/| favicon.ico #网站图标，网络路径为：/favicon.ico| \\---images #自建文件夹用来放图片资源，网络路径为：/images| | GoodHexo.png #/images下的图片，引用地址为：/images/GoodHexo.png，也可以相对路径：../images/GoodHexo.png| \\---_posts #你所有的文章都存在这个目录底下| | hello-world.md #示例文章源文件，该MarkDown文件会被hexo渲染成HTML页发布| \\---about #自建的一个叫 about 的页面目录| | index.md #about 页面内容，网络路径为：/about/| |+---themes #主题存放目录| \\---landscape #默认主题| \\---butterfly #本地另一个主题| \\---fluid #本地另一个主题| | 5.2 网站设置 从上文可知，网站基础配置需要在 hexo程序工作目录 中的 _config.yml 进行配置： 1234567891011121314# Sitetitle: 易网盟 #网站标题subtitle: &#x27;专注网站建设优化&#x27; #网站副标题description: &#x27;Hexo + GitHub免费仓库托管方案，微软不倒，羊毛到老！&#x27; #网站描述keywords: 静态网站 #网站关键词，不是所有的主题都支持author: 易网盟 #作者timezone: &#x27;Asia/Shanghai&#x27; #时区，一般中国时区# language: en #网站语言，默认 en，请根据主题文档设置language: zh-CN# URL## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;url: https://yiwangmeng.cn # 网址必须以 http[s]:// 开头，没有自己的域名就用免费 username.github.iopermalink: :title.html #链接发布格式 打开查看内容就能知道大概了，都有对应的注释，请根据自己实际情况修改填写，或者可以参阅 官方配置文档。 如果网站网址是配置自有域名，请在域名解析托管商添加对应 CNAME 解析，可参考：从零开始建个小站 - 常见问题 中相关章节：要修改网址怎么办。 5.3 主题设置 首先在上文 网站设置 中切换启用自己喜欢的主题，行首以 # 开头表示注释掉了不启用： 12345678910111213# Extensions ## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/# 只能启用1个主题，启用后本地使用 `hexo server` 命令即可启动预览服务进行预览# 切换主题后如果预览样式不对，请启动预览服务前运行一遍 `hexo clean` 命令# theme: landscape #默认主题，最简单# theme: maupassant #简洁的博客主题，配置文件：_config.maupassant.ymltheme: butterfly #时尚的博客主题，配置文件：_config.butterfly.yml# theme: matery #响应式布局多媒体主题，配置文件：_config.matery.yml# theme: fluid #Material Design 风格主题，配置文件：_config.fluid.yml# theme: next #简约的博客主题，配置文件：_config.next.yml# theme: Academia #学术简历主题，配置文件：_config.Academia.yml# theme: yelee #双栏博客主题，配置文件：_config.yelee.yml 接下来就对指定的主题进行配置，具体到主题功能设置每个主题都不一样，所以需要根据实际使用的主题文档去配置，一般在主题目录下都会有个 README.md ，请打开或者找到主题在线文档去阅读，主题让装啥就装啥，让咋改就咋改。 为了以后更新主题时不覆盖我们已经配置好的内容，可以将主题目录下的 _config.yml 复制到 hexo根目录 下，并重命名为：_config.主题名.yml ，如：_config.fluid.yml 。 _config.主题名.yml 来源于 themes/主题名/_config.yml 或 node_modules/hexo-theme-主题名/_config.yml，如主题有更新请自行同步 Hexo 会将 _config.主题名.yml 和主题目录下的 _config.yml 配置内容 合并 合并 合并 使用，相同配置项则以 _config.主题名.yml 中的值为准 然后按照主题说明文档在新复制的主题配置中按需进行配置，以后主题有更新，如果涉及到该配置文件变更，请将最新内容同步到 _config.主题名.yml 中即可。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://yiwangmeng.cn/action-hexo/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://yiwangmeng.cn/action-hexo/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"从零开始建个小站 - 其他知识","slug":"guide-how-to-build-site-8","date":"2022-05-21T12:00:00.000Z","updated":"2025-02-26T03:37:56.633Z","comments":true,"path":"guide-how-to-build-site-8.html","permalink":"https://yiwangmeng.cn/action-hexo/guide-how-to-build-site-8.html","excerpt":"想到什么写什么，如果没有你关心的问题，请一如既往的求助本站战略合作伙伴 Google和百度。","text":"想到什么写什么，如果没有你关心的问题，请一如既往的求助本站战略合作伙伴 Google和百度。 学会基本的 Git 不管是敲代码还是码字工，大名鼎鼎的 Git 都应该学一点，团队一起码代码，汇聚天下豪杰一起写流水小说，事后回查都游刃有余。 Git 基础 网络上优秀教程一大片，不浪费时间精力了，随便找一个：Git 教程 | 菜鸟教程，边用边学就行，俺们也是这样过来的。 改了文件名大小写，Git 不会显示变更无法提交 Git 默认对文件名大小写不敏感，即便你把一个文件名从 a.conf 改成 A.CONF ，Git 也认为没有变更，所以也就无法将此变更提交同步到仓库，需要在项目仓库路径下运行以下命令禁用忽略大小写： 1git config core.ignorecase false 设置完就对大小写敏感了，此时更改文件名大小写就能提交变更了。 让 Git 通过代理连接 有些地区直接无法连接全球男性交友社区，也就无从谈起仓库增删改，就需要借助代理连接，可通过以下命令指定Git走代理网络： 123#这里使用socks5 端口为1080，具体端口看代理软件配置git config --global http.proxy &#x27;socks5://127.0.0.1:1080&#x27; git config --global https.proxy &#x27;socks5://127.0.0.1:1080&#x27; 查看代理： 12git config --global --get http.proxygit config --global --get https.proxy 取消代理： 12git config --global --unset http.proxygit config --global --unset https.proxy 或者也可以通过编辑 Git 配置文件直接配置，打开 用户目录/.gitconfig ，Windows系统如 C:\\Users\\ywm\\.gitconfig ，增加如下内容： 1234567891011# 这是个使用 clash 代理的默认端口示例，具体请看代理软件配置[core] gitproxy = socks5://127.0.0.1:7890[http] postBuffer = 524288000 postBuffer = 524288000 proxy = socks5://127.0.0.1:7890[https] postBuffer = 524288000 postBuffer = 524288000 proxy = socks5://127.0.0.1:7890 打开 .gitconfig 文件可见之前配置的用户名称和email信息等，直接通过编辑配置文件和通过命令设置是一样的效果。 以上是针对 http[s]:// 协议的代理设置方式，一般 ssh:// 协议链接不需要代理，如果需要，可以参考此教程去设置：Git 通过配置SSH代理访问 Github 添加/删除 submodule 本仓库包中自带的 Hexo 主题都是通过 git submodule add 管理的，主题只是作为一个版本链接提交，源码仓库中 themes 目录下并不包含主题文件。 以 submodule 方式管理的文件是不能直接在主仓库进行增删改操作的，改了会出现 Subproject commit xxxx-dirty 提示，线上使用时将会出现找不到 submodule 版本的错误 如果想添加其他的主题，可以将主题文件提交，作为仓库项目的一部分，也可以以 submodule 方式应用，添加只需要一条命令： 1git submodule add --depth=1 主题仓库地址 themes/主题名 这样该主题文件夹只是以一个指定版本链接的形式存在于本仓库项目中，如果想完整下载到本地，添加 --recurse-submodules 参数就能一起克隆： 1git clone --recurse-submodules 源码仓库地址 #带子模块一起克隆到本地 如果不需要其中某个主题，可以通过以下方法删除掉，以删除 themes/ananke 这个主题为例： 删除 .gitmodules 中这部分123 [submodule &quot;themes/ananke&quot;]path = themes/anankeurl = https://github.com/theNewDynamic/gohugo-theme-ananke.git 删除 .git/config 中以下部分123 [submodule &quot;themes/ananke&quot;]url = https://github.com/theNewDynamic/gohugo-theme-ananke.gitactive = true 删除 .git\\modules\\themes 目录下的 ananke 文件夹 删除 themes\\ananke 文件夹 在 Git 中将以上变更暂存 在项目根目录路径下运行 git rm --cached themes\\ananke 命令清理 Git 工作区缓存 至此，该 submodule 就从版本库中删除了，将所有变更结果提交同步到线上仓库即可。 Git 回滚到指定版本 在 仓库文件夹下 打开 Git Bash Here 输入 git reflog 命令，会返回这样的历史提交记录： 12345ef39b2d (HEAD -&gt; main, origin/main, origin/HEAD) HEAD@&#123;0&#125;: commit: updatefa646fe HEAD@&#123;14&#125;: commit: 角色管理站点权限不可编辑bug修改60b35d4 HEAD@&#123;15&#125;: commit: 拓扑图相关修改93173e7a HEAD@&#123;16&#125;: commit: 拓扑图相关修改8d51db77 HEAD@&#123;17&#125;: commit: 拓扑图相关修改8 按 q 「英文状态下」退出 log 记录，然后输入回退到指定版本命令：git reset xxx，xxx 指某次提交的版本记录 id，如：12# 添加 `--hard` 参数会将工作区变更全部擦除git reset --hard 3173e7a 强制推送至远程：输入命令 git push --force，至此版本回退就成功了 Hexo 高级用法 如果只是普通的写写博客，做个小展示网站什么的，高级语法也不需要。但用上些高级语法，功能就更强大，在处理大量同质内容时就事半功倍了，直接见官方文档吧： Hexo：标签插件（Tag Plugins） Hexo：数据文件（data-files） Hexo标签语法能够快速实现一些功能，但并不是所有的主题都支持，当在内容中使用了标签语法，而主题不支持时，将出现渲染失败异常，如下面这段 ButterFly 主题支持的图库代码： 123&lt;div class=&quot;gallery-group-main&quot;&gt;&#123;% galleryGroup &#x27;自带主题&#x27; &#x27;主题预览截图&#x27; &#x27;/gallery/&#x27; https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %&#125;&lt;/div&gt; 切换到其他主题要么功能未实现，要么直接渲染出错异常，需要删除对应的内容方可。 MarkDown 语法 📌 Titles Heading 1: # A first-level title Heading 2: # A second-level title Heading 3: ## A third-level title 💻 Code blocks creates a new code block.，源码如下： 1`creates a new code block.` ```py creates a new code block with Python syntax highlighting. 📋 Lists We automatically detect ordered and un-ordered lists as you type. Begin a line with - or * to start a bullet list. Being a line with 1. to start a numbered list. Use Tab to go one level deeper, and Shift+Tab to go up. Begin a line with - [ ] to start a task list. 🎤 Quotes Begin a line with &gt; to create a block quote. 🐮 emoji markup 😊 😃 😴 Complete list of github markdown emoji markup 另一个emoji表情大全 💖 Images 1![图片alt](图片链接 &quot;图片title&quot;) 图片链接有两种方法引用，任意一种都可以，各有利弊，自行选择。 方法1：上传到图床，然后通过图床地址引用 12#图床就是别人提供给你的存储空间和网络![图床引用](https://s1.ax1x.com/2022/12/06/z6rzA1.jpg &quot;imgse图床引用示例&quot;) 方法2：图片文件存在项目内，本地引用 12345#相对路径：相对于本文档的路径，`..` 表示上级目录#这种写法在MarkDown编辑器中可以实时预览效果![自存相对路径引用](../../images/hexo.jpeg &quot;图片引用示例&quot;)#绝对路径：引用网络路径，未经网络解析无法预览，但发布到网络上是正确的![自存绝对路径引用](/images/hexo.jpeg &quot;图片引用示例&quot;) Hexo 项目 /source 目录为网络根路径 / ，本地文件 /source/images/hexo.jpeg 在网络上对应的 url 为：https://yiwangmeng.cn/images/hexo.jpeg References Markdown 入门参考 Markdown 基本语法 Markdown 菜鸟教程","categories":[{"name":"做网站","slug":"做网站","permalink":"https://yiwangmeng.cn/action-hexo/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://yiwangmeng.cn/action-hexo/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"从零开始建个小站 - 教程导航","slug":"guide-how-to-build-site-0","date":"2022-05-20T12:20:20.000Z","updated":"2025-02-26T03:37:56.633Z","comments":true,"path":"guide-how-to-build-site-0.html","permalink":"https://yiwangmeng.cn/action-hexo/guide-how-to-build-site-0.html","excerpt":"","text":"引言 互联网时代，大家都想在浩瀚的网络世界留下点印记。 虽然有微信朋友圈，QQ空间，微博等可以记录点点滴滴，但他们要么是没法扩大圈子，要么是加以各种限制，到头来这些数据产权还都属于马家，更不用谈某天实现增值获取收益，寄人篱下终究不如自己做主：建个自己掌控的网站！ 建站须知 虽然说是零基础建站，但一些互联网及计算机基本知识技能不能少，如文件和文件夹之别，路径区分，怎么安装软件，怎么复制粘贴，怎么输命令，怎么解析域名…… 建站就需要准备文件托管服务，如上传到 GitHub/Gitee 仓库，自己买的云服务器，虚拟主机等 网站对外需要有IP或者域名（一般都不会直接IP对外服务），所以要么用 GitHub/Gitee 提供免费的二级域名，要么自行购买域名并解析到文件托管服务器，各种服务器优惠可以参考 网联基地 建站时会涉及各种配置设置，而且各程序，各主题都不尽相同，都需要根据实际对象依照文档进行配置，所以需要具备阅读文档的能力 使用过程中难免遇到问题，遇到问题需要看得懂输出信息，能够从输出信息中提取关键信息求助战略合作伙伴 百度 或 Google ，找站长也需要反馈有用的信息才能解决问题 教程目录 本简版教程旨在试图引导小白快速上手 Hexo 建站框架，免费或者低成本建个自己的小站，部分工作已经完成的直接跳到后续需要的步骤开始看即可。 本站内容支持按关键词搜索，不想一页页翻请 善用搜索和内容目录导航 从零开始建个小站 - 前置知识 从零开始建个小站 - 建站方案选择 从零开始建个小站 - 1. 搭个本地预览环境 从零开始建个小站 - 2. 拉取仓库到本地 从零开始建个小站 - 3. 搞个编辑器 从零开始建个小站 - 4. 练手内容维护 从零开始建个小站 - 5. 个性化设置 从零开始建个小站 - 其他知识 从零开始建个小站 - 常见问题 从零开始的详细教程可参考：从零开始建个小站。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://yiwangmeng.cn/action-hexo/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://yiwangmeng.cn/action-hexo/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"从零开始建个小站 - 前置知识","slug":"guide-how-to-build-site-1","date":"2022-05-20T12:20:20.000Z","updated":"2025-02-26T03:37:56.633Z","comments":true,"path":"guide-how-to-build-site-1.html","permalink":"https://yiwangmeng.cn/action-hexo/guide-how-to-build-site-1.html","excerpt":"","text":"基本概念 名词 解释说明 git 大名鼎鼎的分布式版本管理工具，每个版本改了什么一目了然 GitHub/Gitee 提供代码存储、托管，有免费的pages服务 pages GitHub/Gitee都有的网页托管访问服务，每用户一个免费二级域名 npm 依赖包管理工具，各种套娃 MarkDown 轻量标记语言，写文档必备技能 服务器/云主机 存放文件24小时在线提供网络访问服务的计算机 域名 互联网上便于人类识别记忆的访问地址 ICP备案 大陆境内服务器需要，有问题方便FBI请喝茶或上门送温暖 主题/模板 套用后实展现相应的界面外观及功能 网站程序选型 网站程序选型主要依据环境依赖程度和维护难度，以及网络上免费资源可持续性考虑，对大多数普通用户，建议： 首选 hugo、hexo...：HTML静态页渲染框架，速度快，可免费托管到 GitHub/Gitee 等仓库，MarkDown 文档维护，主题多可满足大部分需求。大部分用户建议选择 Hexo 程序，框架结构清晰，用户内容复用性高，而且有几百套各式主题可选。 虽然 hugo 程序本身无外部环境依赖，但是各主题制作大佬依然热衷引进 npm 、go module 套娃，而且内容通用性差，换个主题内容基本上就要重新调整，配置也几乎不通用，对新手或者想经常换花样的同学不够友好 其次 WordPress、typecho...：需自备服务器及域名，基本上没有免费资源可用，但有后台界面，网络上用户多，插件多，文档教程多 市面上网站程序比较多，罗列了几个比较主流的框架，更多可以自行通过搜索引擎查找对应文档。 程序框架 环境依赖 维护难度 推荐度 常见用途 hugo / ★★ ★★★★☆ 个人网站，企业官网，在线文档，求职简历 hexo nodejs ★★ ★★★★★ 个人网站，企业官网，在线文档，求职简历 gitbook nodejs ★★★★ ★★ 在线文档 vuepress nodejs ★★★★ ★★★ 个人网站，在线文档 docsy nodejs ★★★★ ★★★ 在线文档 WordPress MySQL，PHP ★★★ ★★★★ 个人网站，企业官网，商业网站 Typecho MySQL，PHP ★★★☆ ★★★☆ 个人网站，企业官网 Zblog MySQL/SQLite，PHP ★★★ ★★★ 个人网站，企业官网 PS：维护难度和推荐度都是主观意见，推荐度高主要是基于部署简单，可选主题多，互联网免费资源多，对最终实现的功能需求未做考虑，大部分情况根据自己实际需求考量。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://yiwangmeng.cn/action-hexo/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://yiwangmeng.cn/action-hexo/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"从零开始建个小站 - 建站方案选择","slug":"guide-how-to-build-site-2","date":"2022-05-20T12:20:20.000Z","updated":"2025-02-26T03:37:56.633Z","comments":true,"path":"guide-how-to-build-site-2.html","permalink":"https://yiwangmeng.cn/action-hexo/guide-how-to-build-site-2.html","excerpt":"既然这是篇小白零基础建站教程，那么就不会涉及带门槛的方案，只是简单罗列了适合新手的案例，其他同等方案或者更复杂方案等熟悉了可以再自行研究。","text":"既然这是篇小白零基础建站教程，那么就不会涉及带门槛的方案，只是简单罗列了适合新手的案例，其他同等方案或者更复杂方案等熟悉了可以再自行研究。 方案对比 免费托管仓库优先选择全球最大男性交友网站 GitHub，Gitee 需要实名认证及发布前内容审核 静态站：Hugo/Hexo/… + GitHub/Gitee + GitHub/Gitee免费二级域名/自备域名 flowchart LR; 本地维护MarkDown内容 -- hugo/hexo渲染 -->本地效果预览 GitHub/Gitee仓库 -- 可绑定自备域名 --> pages对外访问 本地维护MarkDown内容 GitHub/Gitee仓库 -- 触发action自动渲染 --> pages对外访问 优点：网络上有免费资源「也可以部署到自有服务器」，静态页速度快，网站源文件通过 git 版本管理安全可靠不会丢，可免维护服务器 缺点：需要点 MarkDown 语法知识，缺免费的小白界面化管理后台，评论之类的功能需要引入第三方实现 动态站：WordPress/Typecho/… + 自备服务器 + 自备域名 flowchart LR; 自备域名 -- DNS解析 --> 自备服务器 --> 网站对外访问 网站界面后台维护内容 --> 自备服务器 -- 大陆区服务器 --> ICP备案 --> 网站对外访问 优点：功能强大几乎能满足所有需求，装好后带后台，纯界面操作所见即所得 缺点：需要自己购买并维护服务器和域名，对服务器要求高，动态内容响应速度相对慢点 准备条件 静态站方案： flowchart TB; 静态站方案 --必须--> 注册GitHub/Gitee账号 & 安装Git客户端 注册GitHub/Gitee账号 --> 创建仓库 & 配置访问令牌 安装Git客户端 --编辑MarkDown源码--> 发布到GitHub/Gitee 静态站方案 --可选--> 安装本地环境 & 装个趁手的编辑器 & 购买域名 装个趁手的编辑器 GitHub/Gitee账号：要使用免费的资源，得先注册个账号。国内 Gitee 也有，但绑定自己的域名要收费，而且内容要审核，所以没特殊需求建议用前世界首富家的 GitHub。当然，你有自己服务器和域名也可以用来替代，国内外各种高性价比服务器可以参考 网联基地。 Git客户端：用来同步管理源代码，改了什么一目了然 MarkDown 编辑器：纯手工敲代码是不可能的，借助编辑器事半功倍，而且还能和 Git 结合，大大降低难度 域名「可选」：花点小钱占个自己的域名赏心悦目，也好打响自己的品牌，万一哪天走了张伟波的运呢？ 动态站方案： flowchart LR; 动态站方案 --必须--> 购买域名 & 购买服务器 购买域名 --解析域名到服务器IP--> 安装环境并部署网站 购买服务器 --大陆区服务器--> ICP备案 购买服务器 --> 安装环境并部署网站 & 后台内容管理 域名：虽然也有免费的，但还是建议花钱买，每年几十元 服务器/云主机/虚拟主机：需要带数据库，支持PHP，Java等及安装依赖扩展 ICP备案：如果用大陆区服务器，必须先工信部ICP备案后才可用，大约需耗时6周","categories":[{"name":"做网站","slug":"做网站","permalink":"https://yiwangmeng.cn/action-hexo/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://yiwangmeng.cn/action-hexo/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"Markdown高级语法","slug":"markdown-advance-syntax","date":"2022-05-08T09:04:21.000Z","updated":"2022-05-08T09:04:21.000Z","comments":true,"path":"markdown-advance-syntax.html","permalink":"https://yiwangmeng.cn/action-hexo/markdown-advance-syntax.html","excerpt":"有少数编辑器不支持，或者需要安装相应的扩展渲染，使用前请先预览确认。","text":"有少数编辑器不支持，或者需要安装相应的扩展渲染，使用前请先预览确认。 目录 通过[TOC]标记来插入目录。 在编辑器不支持[TOC]标记的情况下可以使用添加id的方法构建目录。 12* [1.Content one](#chapter1)* [2.Content two](#chapter2) 显示效果： 1.Content one 2.Content two TeX公式 内联的TeX公式使用一个美元符号标记。 1$\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$ 会被编译成 内联（行内）公式：$\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$ TeX公式块用独占一行的两个美元符号来标记。 1$$\\left \\lbrace \\sum_&#123;i=0&#125;^n i^3 = \\frac&#123;(n^2+n)(n+6)&#125;&#123;9&#125; \\right \\rbrace$$ 会被编译成 $$\\left \\lbrace \\sum_{i=0}^n i^3 = \\frac{(n^2+n)(n+6)}{9} \\right \\rbrace$$ 一段解题演示: $\\because f(x)$的定义域为$(0,+\\infty)$，$f{^{\\prime}}(x)=\\dfrac{1-a-ln x}{x^2}$，$ \\therefore f{^{\\prime}}(\\mathrm{e})=-\\dfrac{a}{e^2}$，由已知可得$f{^{\\prime}}(\\mathrm{e})\\times 2=-1$，即$a=\\dfrac{\\mathrm{e}^2}{2}$ 当 $x&gt;0$ 时$g(x)\\geq f(x)$，即：$$\\mathrm{e}^x+\\dfrac{2}{x}-1\\geq\\dfrac{\\ln x+a}{x}$$ 化简可得：$a\\le x\\left(\\mathrm{e}^x-1\\right)-\\ln x+2$ 以上公式渲染，一般编辑器或渲染模板都会支持，如果你的环境恰好不支持这个功能，可以手动解决。首先引入mathjax脚本： 1&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML&quot;&gt;&lt;/script&gt; 之后，在需要插入公式的地方使用 &lt;script&gt; 标签包裹公式： 12345&lt;script type=&quot;math/tex&quot;&gt;\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;\\Gamma(z) = \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,.&lt;/script&gt; 以上公式展示效果，在实际显示过程中，根据网络加载速度不同会有不同的解析展示速度，TeX/LaTex 公式语法参考请见这里。 UML图 语法为在代码块开始行后面加入语法声明，如 ```mermaid ，然后可以像这样来画uml时序图： sequenceDiagram Alice->>Bob: Hello Bob,how are you? Note right of Bob: Bob thinks Bob-->>Alice: I am fine thanks! and U? Note left of Alice: SB 其MarkDown代码如下： 1234567\\`\\`\\`mermaidsequenceDiagram Alice-&gt;&gt;Bob: Hello Bob,how are you? Note right of Bob: Bob thinks Bob--&gt;&gt;Alice: I am fine thanks! and U? Note left of Alice: SB\\`\\`\\` #代码块标识会被解析，实际上写代码块时不用添加转义符“\\” 时序图的语法请见 这里 或 这里。 uml流程图： graph LR; A-->B & C-->D; 其实现代码如下： 1234\\`\\`\\`mermaidgraph LR; A--&gt;B &amp; C--&gt;D;\\`\\`\\` 流程图的语法请见 这里， 更复杂点的flowchart可以看 这里 。 参考文档 Markdown 入门参考 MarkDown文档中如何画出流程图 https://github.com/wizardforcel/markdown-simple-world http://stevenshi.me/2017/06/26/hexo-insert-formula/ https://blog.csdn.net/u013282174/article/details/80666123 https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html https://mermaidjs.github.io/","categories":[{"name":"学编程","slug":"学编程","permalink":"https://yiwangmeng.cn/action-hexo/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://yiwangmeng.cn/action-hexo/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]}],"categories":[{"name":"做网站","slug":"做网站","permalink":"https://yiwangmeng.cn/action-hexo/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"},{"name":"学编程","slug":"学编程","permalink":"https://yiwangmeng.cn/action-hexo/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"Example","slug":"Example","permalink":"https://yiwangmeng.cn/action-hexo/tags/Example/"},{"name":"教程","slug":"教程","permalink":"https://yiwangmeng.cn/action-hexo/tags/%E6%95%99%E7%A8%8B/"},{"name":"混技能","slug":"混技能","permalink":"https://yiwangmeng.cn/action-hexo/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]}